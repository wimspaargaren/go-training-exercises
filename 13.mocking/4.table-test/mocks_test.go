// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package repository

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockDataStore creates a new instance of MockDataStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDataStore(t interface {
	mock.TestingT
	Cleanup(func())
},
) *MockDataStore {
	mock := &MockDataStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockDataStore is an autogenerated mock type for the DataStore type
type MockDataStore struct {
	mock.Mock
}

type MockDataStore_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDataStore) EXPECT() *MockDataStore_Expecter {
	return &MockDataStore_Expecter{mock: &_m.Mock}
}

// Store provides a mock function for the type MockDataStore
func (_mock *MockDataStore) Store(info *Info) error {
	ret := _mock.Called(info)

	if len(ret) == 0 {
		panic("no return value specified for Store")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(*Info) error); ok {
		r0 = returnFunc(info)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockDataStore_Store_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Store'
type MockDataStore_Store_Call struct {
	*mock.Call
}

// Store is a helper method to define mock.On call
//   - info *Info
func (_e *MockDataStore_Expecter) Store(info interface{}) *MockDataStore_Store_Call {
	return &MockDataStore_Store_Call{Call: _e.mock.On("Store", info)}
}

func (_c *MockDataStore_Store_Call) Run(run func(info *Info)) *MockDataStore_Store_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 *Info
		if args[0] != nil {
			arg0 = args[0].(*Info)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockDataStore_Store_Call) Return(err error) *MockDataStore_Store_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockDataStore_Store_Call) RunAndReturn(run func(info *Info) error) *MockDataStore_Store_Call {
	_c.Call.Return(run)
	return _c
}
